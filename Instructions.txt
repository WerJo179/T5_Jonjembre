# OFFICIAL T5_JONJEMBRE
# USER GUIDE FOR RASPBERRY PI SETUP

# This guide will lead you through the steps on how to set up your
# Raspberry PI to use our product with the provided scripts.

# Text will be displayed with hashtags at the beginning of the line
# [Headings] will be displayed between brackets -> []

# [Important information]
# Before you proceed to follow the steps, you have to be sure of
# some things.

# First, you should be logged in as the default "pi" user, and
# you should not change that name. (You can of course change the password)

# Then, you need to also make sure that the pi user does have sudo privileges.
# This should be on per default and you don't need to worry if you haven't
# specifically changed anything.

# [Packages]
# You'll first need to run these commands on your Raspberry Pi terminal:#
sudo apt update && sudo apt upgrade -y
sudo apt install libcamera-utils -y
sudo apt install python3 -y
sudo apt install python3-dev python3-pip python3-venv -y
sudo apt install git -y

sudo pip3 install adafruit-circuitpython-dht -y
sudo pip3 install RPi.GPIO -y
sudo pip3 install spidev -y
sudo pip3 install mfrc522 -y
sudo pip3 install boto3 -y

# After running these commands, you should have every package/library
# installed which you'll need.

# [Configuration]
# You will now have to do some configuration of your system to finalize the setup and
# lastly get the script files from our GitHub Repository.

# Run these commands in your terminal:
echo "break-system-packages = true" >> /etc/pip.conf
mkdir -p ~/aws
echo "[default]" > ~/.aws/config
echo "region=YOUR_REGION" >> ~/.aws/config # Replace YOUR_REGION with your AWS region
echo "[default]" > ~/.aws/credentials
echo "aws_access_key_id = YOUR_ACCESS_KEY_ID" >> ~/.aws/credentials # Replace YOUR_ACCESS_KEY_ID with your AWS access key id
echo "aws_secret_access_key = YOUR_SECRET_ACCESS_KEY" >> ~/.aws/credentials # Replace YOUR_SECRET_ACCESS_KEY with your AWS access secret key

# [Scripts]
# Now, you'll only have to clone our GitHub repository and edit your crontab to automatically run the scripts:

cd ~
git clone https://github.com/WerJo179/T5_Jonjembre

crontab -e
# If you'll be asked to make a choice between text editors, I'd recommend choosing 1 -> nano
# Now, you need to add the following at the end of the file:
@reboot python3 ~/T5_Jonjembre/guard.py &
@reboot python3 ~/T5_Jonjembre/lock.py &
@reboot python3 ~/T5_Jonjembre/DHT.py &

# These will make the PI run the scripts in background upon booting.
# Lastly, you'll need to restart your Pi with this command and you can test if the scripts work:
sudo reboot now

# [End]
# Thank you for choosing our service! If you have any questions or issues, please
# feel free to get in touch with us!